!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):e.MicroModal=o()}(this,function(){"use strict";var e="0.3.1",p=function(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")},o=function(){function i(e,o){for(var t=0;t<o.length;t++){var i=o[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,o,t){return o&&i(e.prototype,o),t&&i(e,t),e}}(),E=function(e){if(Array.isArray(e)){for(var o=0,t=Array(e.length);o<e.length;o++)t[o]=e[o];return t}return Array.from(e)},t,i,s,n,l,a,r,c,d,u,f;return i=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'],s=function(){function k(e){var o=e.targetModal,t=e.triggers,i=void 0===t?[]:t,n=e.onShow,a=void 0===n?function(){}:n,r=e.onClose,s=void 0===r?function(){}:r,l=e.openTrigger,c=void 0===l?"data-micromodal-trigger":l,d=e.closeTrigger,u=void 0===d?"data-micromodal-close":d,f=e.disableScroll,h=void 0!==f&&f,v=e.disableFocus,g=void 0!==v&&v,m=e.awaitCloseAnimation,b=void 0!==m&&m,y=e.debugMode,w=void 0!==y&&y;p(this,k),
// Save a reference of the modal
this.modal=document.getElementById(o),
// Save a reference to the passed config
this.config={debugMode:w,disableScroll:h,openTrigger:c,closeTrigger:u,onShow:a,onClose:s,awaitCloseAnimation:b,disableFocus:g},0<i.length&&this.registerTriggers.apply(this,E(i)),
// prebind functions for event listeners
this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}
/**
     * Loops through all openTriggers and binds click event
     * @param  {array} triggers [Array of node elements]
     * @return {void}
     */return o(k,[{key:"registerTriggers",value:function e(){for(var o=this,t=arguments.length,i=Array(t),n=0;n<t;n++)i[n]=arguments[n];i.forEach(function(e){e.addEventListener("click",function(){return o.showModal()})})}},{key:"showModal",value:function e(){this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),this.modal.classList.add("is-open"),this.setFocusToFirstNode(),this.scrollBehaviour("disable"),this.addEventListeners(),this.config.onShow(this.modal)}},{key:"closeModal",value:function e(){var o=this.modal;this.modal.setAttribute("aria-hidden","true"),this.removeEventListeners(),this.scrollBehaviour("enable"),this.activeElement.focus(),this.config.onClose(this.modal),this.config.awaitCloseAnimation?this.modal.addEventListener("animationend",function e(){o.classList.remove("is-open"),o.removeEventListener("animationend",e,!1)},!1):o.classList.remove("is-open")}},{key:"scrollBehaviour",value:function e(o){if(this.config.disableScroll){var t=document.querySelector("body");switch(o){case"enable":Object.assign(t.style,{overflow:"initial",height:"initial"});break;case"disable":Object.assign(t.style,{overflow:"hidden",height:"100vh"});break;default:}}}},{key:"addEventListeners",value:function e(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),document.addEventListener("keydown",this.onKeydown)}},{key:"removeEventListeners",value:function e(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),document.removeEventListener("keydown",this.onKeydown)}},{key:"onClick",value:function e(o){o.target.hasAttribute(this.config.closeTrigger)&&(this.closeModal(),o.preventDefault())}},{key:"onKeydown",value:function e(o){27===o.keyCode&&this.closeModal(o),9===o.keyCode&&this.maintainFocus(o)}},{key:"getFocusableNodes",value:function e(){var o=this.modal.querySelectorAll(i);return Object.keys(o).map(function(e){return o[e]})}},{key:"setFocusToFirstNode",value:function e(){if(!this.config.disableFocus){var o=this.getFocusableNodes();o.length&&o[0].focus()}}},{key:"maintainFocus",value:function e(o){var t=this.getFocusableNodes();
// if disableFocus is true
if(this.modal.contains(document.activeElement)){var i=t.indexOf(document.activeElement);o.shiftKey&&0===i&&(t[t.length-1].focus(),o.preventDefault()),o.shiftKey||i!==t.length-1||(t[0].focus(),o.preventDefault())}else t[0].focus()}}]),k}(),n=null,l=function e(o,t){var i=[];return o.forEach(function(e){var o=e.attributes[t].value;void 0===i[o]&&(i[o]=[]),i[o].push(e)}),i},a=function e(o){if(!document.getElementById(o))return console.warn("MicroModal v0.3.1: ❗Seems like you have missed %c'"+o+"'","background-color: #f8f9fa;color: #50596c;font-weight: bold;","ID somewhere in your code. Refer example below to resolve it."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<div class="modal" id="'+o+'"></div>'),!1},r=function e(o){if(o.length<=0)return console.warn("MicroModal v0.3.1: ❗Please specify at least one %c'micromodal-trigger'","background-color: #f8f9fa;color: #50596c;font-weight: bold;","data attribute."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<a href="#" data-micromodal-trigger="my-modal"></a>'),!1},c=function e(o,t){if(r(o),!t)return!0;for(var i in t)a(i);return!0},{init:function e(o){
// Create an config object with default openTrigger
var t=Object.assign({},{openTrigger:"data-micromodal-trigger"},o),i=[].concat(E(document.querySelectorAll("["+t.openTrigger+"]"))),n=l(i,t.openTrigger);
// Collects all the nodes with the trigger
// Checks if modals and triggers exist in dom
if(!0!==t.debugMode||!1!==c(i,n))
// For every target modal creates a new instance
for(var a in n){var r=n[a];t.targetModal=a,t.triggers=[].concat(E(r)),new s(t)}},show:function e(o,t){var i=t||{};i.targetModal=o,
// Checks if modals and triggers exist in dom
!0===i.debugMode&&!1===a(o)||// eslint-disable-line no-new
(
// stores reference to active modal
n=new s(i)).showModal()},close:function e(){n.closeModal()}}});